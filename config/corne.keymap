/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip { chain-length = <27>; };

/ {
    behaviors {
        behavior_f9_layer3: behavior_f9_layer3 {
            compatible = "zmk,behavior";
            label = "F9_LAYER3";
            bindings = <&kp F9>; // Key F9 on Layer 3
            trigger-press = <&kp F20>; // Triggered when F20 is held
            tap-ms = <200>;
        };
        
        behavior_comma_layer3: behavior_comma_layer3 {
            compatible = "zmk,behavior";
            label = "COMMA_LAYER3";
            bindings = <&kp COMMA>; // Key COMMA on Layer 3
            trigger-press = <&kp F20>; // Triggered when F20 is held
            tap-ms = <200>;
        };
        
        behavior_f1_layer3: behavior_f1_layer3 {
            compatible = "zmk,behavior";
            label = "F1_LAYER3";
            bindings = <&kp F1>; // Key F1 on Layer 3
            trigger-press = <&kp F20>; // Triggered when F20 is held
            tap-ms = <200>;
        };
        
        behavior_f2_layer3: behavior_f2_layer3 {
            compatible = "zmk,behavior";
            label = "F2_LAYER3";
            bindings = <&kp F2>; // Key F2 on Layer 3
            trigger-press = <&kp F20>; // Triggered when F20 is held
            tap-ms = <200>;
        };
        
        behavior_a_layer3: behavior_a_layer3 {
            compatible = "zmk,behavior";
            label = "A_LAYER3";
            bindings = <&kp A>; // Key A on Layer 3
            trigger-press = <&kp F20>; // Triggered when F20 is held
            tap-ms = <200>;
        };
        
        behavior_o_layer3: behavior_o_layer3 {
            compatible = "zmk,behavior";
            label = "O_LAYER3";
            bindings = <&kp O>; // Key O on Layer 3
            trigger-press = <&kp F20>; // Triggered when F20 is held
            tap-ms = <200>;
        };
        
        behavior_e_layer3: behavior_e_layer3 {
            compatible = "zmk,behavior";
            label = "E_LAYER3";
            bindings = <&kp E>; // Key E on Layer 3
            trigger-press = <&kp F20>; // Triggered when F20 is held
            tap-ms = <200>;
        };
        
        behavior_number1_layer3: behavior_number1_layer3 {
            compatible = "zmk,behavior";
            label = "NUMBER1_LAYER3";
            bindings = <&kp NUMBER_1>; // Key NUMBER_1 on Layer 3
            trigger-press = <&kp F20>; // Triggered when F20 is held
            tap-ms = <200>;
        };
        
        behavior_number2_layer3: behavior_number2_layer3 {
            compatible = "zmk,behavior";
            label = "NUMBER2_LAYER3";
            bindings = <&kp NUMBER_2>; // Key NUMBER_2 on Layer 3
            trigger-press = <&kp F20>; // Triggered when F20 is held
            tap-ms = <200>;
        };
        
        behavior_number3_layer3: behavior_number3_layer3 {
            compatible = "zmk,behavior";
            label = "NUMBER3_LAYER3";
            bindings = <&kp NUMBER_3>; // Key NUMBER_3 on Layer 3
            trigger-press = <&kp F20>; // Triggered when F20 is held
            tap-ms = <200>;
        };
        
        behavior_n5_layer3: behavior_n5_layer3 {
            compatible = "zmk,behavior";
            label = "N5_LAYER3";
            bindings = <&kp N5>; // Key N5 on Layer 3
            trigger-press = <&kp F20>; // Triggered when F20 is held
            tap-ms = <200>;
        };
        
        behavior_space_layer3: behavior_space_layer3 {
            compatible = "zmk,behavior";
            label = "SPACE_LAYER3";
            bindings = <&kp SPACE>; // Key SPACE on Layer 3
            trigger-press = <&kp F20>; // Triggered when F20 is held
            tap-ms = <200>;
        };



        Gui_and_lay1: Gui_and_lay1 {
            compatible = "zmk,behavior-tap-dance";
            label = "GUI_AND_LAY1";
            #binding-cells = <0>;
            bindings = <&mac_gui_layer1>, <&kp LEFT_COMMAND>, <&mac_gui_shft_1>;

            tapping-term-ms = <250>;
        };

        shft_mod1: shft_mod1 {
            compatible = "zmk,behavior-tap-dance";
            label = "SHFT_MOD1";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&mo 1>, <&mac_shift_layer1>;

            tapping-term-ms = <275>;
        };

        cntrl_andlayer1: cntrl_andlayer1 {
            compatible = "zmk,behavior-tap-dance";
            label = "CNTRL_ANDLAYER1";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_CONTROL>,
                <&mac_cntrl_layer1>,
                <&mac_cntrl_shft_layer1>;

            tapping-term-ms = <275>;
        };

        mod_low_shft: mod_low_shft {
            compatible = "zmk,behavior-tap-dance";
            label = "MOD_LOW_SHFT";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&kp LEFT_SHIFT>, <&mac_shift_layer1>;

            tapping-term-ms = <230>;
        };

        oldmodgui: oldmodgui {
            compatible = "zmk,behavior-tap-dance";
            label = "OLDMODGUI";
            #binding-cells = <0>;
            bindings = <&kp LEFT_COMMAND>, <&mac_gui_layer1>, <&mac_gui_shft_1>;

            tapping-term-ms = <225>;
        };

        mod_gui_e_ctrl_b: mod_gui_e_ctrl_b {
            compatible = "zmk,behavior-mod-morph";
            label = "MOD_GUI_E_CTRL_B";
            bindings = <&kp E>, <&kp LC(B)>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
        };

        mod_gui_u_ctrl_i: mod_gui_u_ctrl_i {
            compatible = "zmk,behavior-mod-morph";
            label = "MOD_GUI_U_CTRL_I";
            bindings = <&kp U>, <&kp LC(I)>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
        };

        lay2_and_alt: lay2_and_alt {
            compatible = "zmk,behavior-tap-dance";
            label = "LAY2_AND_ALT";
            #binding-cells = <0>;
            bindings = <&mo 2>, <&kp LEFT_ALT>, <&mac_Alt_lay1>;

            tapping-term-ms = <250>;
        };
    };

    macros {
        /**
         * Temporarily switches to a layer (`&mo`) while a modifier is held.
         * Analogous to QMK's `LM()`, using a parameterized macro.
         *
         * Params:
         *  1. Layer to switch to
         *  2. Modifier to press while layer is active
         *
         * Example:
         *  `&lm NUM_LAYER LSHIFT`
         */

        mac_gui_layer1: mac_gui_layer1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 1>,
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LEFT_GUI>,
                <&macro_release>,
                <&mo 1>;

            label = "MAC_GUI_LAYER1";
        };

        mac_cntrl_layer1: mac_cntrl_layer1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 1>,
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LEFT_CONTROL>,
                <&macro_release>,
                <&mo 1>;

            label = "MAC_CNTRL_LAYER1";
        };

        mac_gui_shft_1: mac_gui_shft_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 1>,
                <&macro_press>,
                <&kp LS(LEFT_GUI)>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LS(LEFT_GUI)>,
                <&macro_release>,
                <&mo 1>;

            label = "MAC_GUI_SHFT_1";
        };

        mac_cntrl_shft_layer1: mac_cntrl_shft_layer1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 1>,
                <&macro_press>,
                <&kp LS(LEFT_CONTROL)>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LS(LEFT_CONTROL)>,
                <&macro_release>,
                <&mo 1>;

            label = "MAC_CNTRL_SHFT_LAYER1";
        };

        mac_shift_layer1: mac_shift_layer1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 1>,
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LEFT_SHIFT>,
                <&macro_release>,
                <&mo 1>;

            label = "MAC_SHIFT_LAYER1";
        };

        mac_Alt_lay1: mac_Alt_lay1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 1>,
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LEFT_ALT>,
                <&macro_release>,
                <&mo 1>;

            label = "MAC_ALT_LAY1";
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
&kp ENTER   &kp SQT        &kp COMMA  &kp PERIOD         &kp P              &kp Y            &kp F             &kp G          &kp C      &kp R  &kp L  &lay2_and_alt
&kp ESCAPE  &kp A          &kp O      &mod_gui_e_ctrl_b  &mod_gui_u_ctrl_i  &kp I            &kp D             &kp H          &kp T      &kp N  &kp S  &kp MINUS
&kp TAB     &kp SEMICOLON  &kp Q      &kp J              &kp K              &kp X            &kp B             &kp M          &kp W      &kp V  &kp Z  &kp EQUAL
                                      &kp BACKSPACE      &shft_mod1         &Gui_and_lay1    &cntrl_andlayer1  &mod_low_shft  &kp SPACE
            >;
        };

        lower_layer {
            bindings = <
&kp GRAVE  &kp NUMBER_1  &kp NUMBER_2    &kp NUMBER_3    &kp NUMBER_4  &kp NUMBER_5       &kp NUMBER_6      &kp NUMBER_7       &kp NUMBER_8    &kp NUMBER_9     &kp NUMBER_0    &trans
&trans     &kp LC(A)     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW    &kp DELETE        &kp HOME           &kp END         &none            &kp UP_ARROW    &kp BACKSLASH
&trans     &kp LC(Y)     &kp LC(Z)       &kp LC(C)       &kp LC(V)     &kp LC(X)          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp DOWN_ARROW  &kp SLASH
                                         &trans          &trans        &trans             &trans            &trans             &trans
            >;
        };

        raise_layer {
            bindings = <
&trans  &bt BT_CLR_ALL  &bt BT_PRV   &bt BT_NXT         &out OUT_TOG     &out OUT_USB        &rgb_ug RGB_TOG    &rgb_ug RGB_EFF  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &rgb_ug RGB_COLOR_HSB(202,100,50)  &trans
&trans  &kp PAGE_DOWN   &kp PAGE_UP  &kp K_PREVIOUS     &kp K_NEXT       &kp C_PLAY_PAUSE    &rgb_ug RGB_HUI    &rgb_ug RGB_HUD  &rgb_ug RGB_SPI  &rgb_ug RGB_SPD  &rgb_ug RGB_SAI                    &none
&trans  &none           &kp CAPS     &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp K_MUTE          &ext_power EP_TOG  &bl BL_TOG       &bl BL_CYCLE     &bl BL_DEC       &rgb_ug RGB_SAD                    &sys_reset
                                     &trans             &trans           &trans              &trans             &trans           &trans
            >;
        };

        layer_3 {
            bindings = <
&trans     &trans        &kp F9        &kp COMMA     &kp F1  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans     &kp F2        &kp A         &kp O         &kp E   &trans    &trans  &trans  &trans  &trans  &trans  &trans
&kp SPACE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp N5  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                       &trans        &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
